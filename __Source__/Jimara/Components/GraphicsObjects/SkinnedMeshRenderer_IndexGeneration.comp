#version 450
#define BLOCK_SIZE 256
layout(local_size_x = BLOCK_SIZE, local_size_y = 1, local_size_z = 1) in;

/// <summary> Useful buffer sizes </summary>
layout(set = 0, binding = 0) uniform Settings {
	uint vertexCount;
} settings;

/// <summary> Input mesh index buffer </summary>
layout(set = 0, binding = 1) buffer MeshIndices {
	uint data[];
} meshIndices;

/// <summary> Deformed(combined) mesh index count </summary>
layout(set = 0, binding = 2) buffer DeformedIndices {
	uint data[];
} deformedIndices;

/// <summary> Index generation kernel </summary>
void main() {
	uint resultId = gl_GlobalInvocationID.x;
	if (resultId > deformedIndices.data.length()) return;
	
	uint meshInstanceId = resultId / meshIndices.data.length();
	uint meshIndexId = resultId - (meshInstanceId * meshIndices.data.length());

    deformedIndices.data[resultId] = meshIndices.data[meshIndexId] + (settings.vertexCount * meshInstanceId);
}
