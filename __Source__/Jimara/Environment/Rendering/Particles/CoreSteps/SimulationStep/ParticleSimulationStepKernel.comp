#version 450
#extension GL_EXT_nonuniform_qualifier : enable

struct SimulationTaskSettings {
	uint particleStateBufferId;		// Bytes [0 - 4)
	uint taskThreadCount;			// Bytes [4 - 8)
	float timeScale;				// Bytes [8 - 12)
	uint timeType;					// Bytes [12 - 16)
};

#define COMBINED_KERNEL_BINDING_SET 1
#define COMBINED_KERNEL_BINDING 0
#define COMBINED_KERNEL_TIME_BINDING 1
#include "../../TimestepTasks/CombinedParticleTimestepKernel.glh"

#include "../../ParticleState.glh"
layout (set = 0, binding = 0) buffer StateBuffers {
    ParticleState[] state;
} stateBuffers[];

void UpdateParticle(inout ParticleState state, in SimulationTaskSettings settings) {
	float deltaTime = Jimara_DeltaTime(settings.timeType) * settings.timeScale;
	state.position += state.velocity * deltaTime;
	state.eulerAngles += state.angularVelocity * deltaTime;
	state.remainingLifetime -= deltaTime;
}

void UpdateParticle(in SimulationTaskSettings settings, uint particleIndex) {
	UpdateParticle(stateBuffers[nonuniformEXT(settings.particleStateBufferId)].state[particleIndex], settings);
}
