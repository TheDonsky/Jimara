#ifndef JIMARA_DualParabolicalMapping_H
#define JIMARA_DualParabolicalMapping_H

vec4 Jimara_SampleDualParabolicalMap(in vec3 offset, in sampler2D map) {
    vec3 dir = offset / length(offset);
    if (dir.z >= 0.0) {
		float vsmUvScale = 1.0 / (dir.z + 1.0);
		vec2 vsmUv = vec2(
			(dir.x * vsmUvScale) * 0.25 + 0.25,
			0.5 - (dir.y * vsmUvScale) * 0.5);
		return texture(map, vsmUv).rgba;
	}
	else {
		float vsmUvScale = 1.0 / (1.0 - dir.z);
		vec2 vsmUv = vec2(
			0.75 - (dir.x * vsmUvScale) * 0.25,
			0.5 - (dir.y * vsmUvScale) * 0.5);
		return texture(map, vsmUv).rgba;
	}
}

vec4 Jimara_SampleDualParabolicalMap(vec3 offset, in sampler2D map, in float zEpsilon) {
	float absZ = abs(offset.z);
	if (absZ < zEpsilon) offset.z = sign(offset.z) * zEpsilon;
	vec4 color = Jimara_SampleDualParabolicalMap(offset, map);
	if (absZ < zEpsilon) {
		vec4 mixColor = Jimara_SampleDualParabolicalMap(vec3(offset.x, offset.y, -offset.z), map);
		color = mix(color, mixColor, mix(0.0, 0.5, 1.0 - absZ / zEpsilon));
	}
	return color;
}

#endif

