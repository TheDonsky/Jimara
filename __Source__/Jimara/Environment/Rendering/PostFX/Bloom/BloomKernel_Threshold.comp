#version 450
#extension GL_EXT_shader_image_load_formatted: require
#define BLOCK_SIZE 16
layout(local_size_x = BLOCK_SIZE, local_size_y = BLOCK_SIZE, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D source;
layout(set = 0, binding = 1) uniform image2D result;
layout(set = 0, binding = 2) uniform Params {
	float minIntensity;
	float invIntensityFade;	// 1.0f / max(maxIntensity - minIntensity, epsilon);
} params;

void main() {
	const ivec2 coord = ivec2(int(gl_GlobalInvocationID.x), int(gl_GlobalInvocationID.y));
	const ivec2 resolution = imageSize(result).xy;

	if (coord.x >= resolution.x || coord.y >= resolution.y) return;

	const vec2 uv = vec2(
		(float(coord.x) + 0.5) / float(resolution.x), 
		(float(coord.y) + 0.5) / float(resolution.y));

	const vec4 color = texture(source, uv);
	const float intensity = color.r * 0.299 + color.g * 0.587 + color.b * 0.114;
	const float amount = clamp((intensity - params.minIntensity) * params.invIntensityFade, 0.0, 1.0);
	imageStore(result, coord, mix(vec4(0.0, 0.0, 0.0, 1.0), color, amount));
}
