#version 450
#include "BitonicSort.glh"

#define BLOCK_SIZE 256
layout(local_size_x = BLOCK_SIZE, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) buffer Elements {
    float[] data;
} elements;

layout(set = 0, binding = 1) uniform SortSettings {
	BitonicSortSettings settings;
} bitonicSortSettings;

void main() {
    uvec2 indices = GetBitonicSortPair(bitonicSortSettings.settings, gl_GlobalInvocationID.x);
    float a = elements.data[indices.x];
    float b = elements.data[indices.y];
    if (a > b) {
        elements.data[indices.y] = a;
        elements.data[indices.x] = b;
    }
}
