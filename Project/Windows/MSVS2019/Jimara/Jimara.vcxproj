<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{fbaf5d7f-3d27-4a32-8da8-e7075e6d4847}</ProjectGuid>
    <RootNamespace>Jimara</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>$(VULKAN_SDK)\Include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\termcolor\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glm;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\stb;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\SPIRV-Reflect;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\tinyobjloader;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\physx\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\pxshared\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN32\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;PhysX_static.lib;PhysXCharacterKinematic_static.lib;PhysXCommon_static.lib;PhysXCooking_static.lib;PhysXExtensions_static.lib;PhysXFoundation_static.lib;PhysXPvdSDK_static.lib;PhysXVehicle_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib32;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX-Lib\MSVS_2019\win.x86_32.vc142.md\debug;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN32\lib-vc2019;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <PreBuildEvent>
      <Command>set jbs_src_dirs="$(SolutionDir)..\..\..\__Source__\Jimara"
set jbs_hlsl_dir="$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\GLSL\LitShaders"
set jbs_spv_dir="$(ProjectDir)\Shaders"
set jbs_light_h="$(SolutionDir)..\..\..\__Source__\Jimara\__Generated__\JIMARA_BUILT_IN_LIGHT_IDENTIFIERS.h"
python "$(SolutionDir)..\..\..\__Scripts__\jimara_build_shaders.py" %jbs_src_dirs% %jbs_hlsl_dir% %jbs_spv_dir% %jbs_light_h%

     </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>$(VULKAN_SDK)\Include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\termcolor\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glm;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\stb;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\SPIRV-Reflect;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\tinyobjloader;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\physx\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\pxshared\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN32\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;PhysX_static.lib;PhysXCharacterKinematic_static.lib;PhysXCommon_static.lib;PhysXCooking_static.lib;PhysXExtensions_static.lib;PhysXFoundation_static.lib;PhysXPvdSDK_static.lib;PhysXVehicle_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib32;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX-Lib\MSVS_2019\win.x86_32.vc142.md\release;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN32\lib-vc2019;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <PreBuildEvent>
      <Command>set jbs_src_dirs="$(SolutionDir)..\..\..\__Source__\Jimara"
set jbs_hlsl_dir="$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\GLSL\LitShaders"
set jbs_spv_dir="$(ProjectDir)\Shaders"
set jbs_light_h="$(SolutionDir)..\..\..\__Source__\Jimara\__Generated__\JIMARA_BUILT_IN_LIGHT_IDENTIFIERS.h"
python "$(SolutionDir)..\..\..\__Scripts__\jimara_build_shaders.py" %jbs_src_dirs% %jbs_hlsl_dir% %jbs_spv_dir% %jbs_light_h%

     </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>$(VULKAN_SDK)\Include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\termcolor\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glm;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\stb;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\SPIRV-Reflect;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\tinyobjloader;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\physx\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\pxshared\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;PhysX_static.lib;PhysXCharacterKinematic_static.lib;PhysXCommon_static.lib;PhysXCooking_static.lib;PhysXExtensions_static.lib;PhysXFoundation_static.lib;PhysXPvdSDK_static.lib;PhysXVehicle_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX-Lib\MSVS_2019\win.x86_64.vc142.md\debug;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN64\lib-vc2019;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <PreBuildEvent>
      <Command>set jbs_src_dirs="$(SolutionDir)..\..\..\__Source__\Jimara"
set jbs_hlsl_dir="$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\GLSL\LitShaders"
set jbs_spv_dir="$(ProjectDir)\Shaders"
set jbs_light_h="$(SolutionDir)..\..\..\__Source__\Jimara\__Generated__\JIMARA_BUILT_IN_LIGHT_IDENTIFIERS.h"
python "$(SolutionDir)..\..\..\__Scripts__\jimara_build_shaders.py" %jbs_src_dirs% %jbs_hlsl_dir% %jbs_spv_dir% %jbs_light_h%

     </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>$(VULKAN_SDK)\Include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\termcolor\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glm;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\stb;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\SPIRV-Reflect;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\tinyobjloader;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\physx\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX\pxshared\include;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;PhysX_static.lib;PhysXCharacterKinematic_static.lib;PhysXCommon_static.lib;PhysXCooking_static.lib;PhysXExtensions_static.lib;PhysXFoundation_static.lib;PhysXPvdSDK_static.lib;PhysXVehicle_static.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\NVIDIA\PhysX\PhysX-Lib\MSVS_2019\win.x86_64.vc142.md\release;$(ProjectDir)..\..\..\..\Jimara-ThirdParty\glfw\glfw-3.3.2.bin.WIN64\lib-vc2019;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
    <ProjectReference>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
    </ProjectReference>
    <PreBuildEvent>
      <Command>set jbs_src_dirs="$(SolutionDir)..\..\..\__Source__\Jimara"
set jbs_hlsl_dir="$(SolutionDir)..\..\..\__BUILD__\MSVS2019\Intermediate\GLSL\LitShaders"
set jbs_spv_dir="$(ProjectDir)\Shaders"
set jbs_light_h="$(SolutionDir)..\..\..\__Source__\Jimara\__Generated__\JIMARA_BUILT_IN_LIGHT_IDENTIFIERS.h"
python "$(SolutionDir)..\..\..\__Scripts__\jimara_build_shaders.py" %jbs_src_dirs% %jbs_hlsl_dir% %jbs_spv_dir% %jbs_light_h%

     </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="__SRC__\Application\AppInformation.cpp" />
    <ClCompile Include="__SRC__\Components\Camera.cpp" />
    <ClCompile Include="__SRC__\Components\Component.cpp" />
    <ClCompile Include="__SRC__\Components\Lights\DirectionalLight.cpp" />
    <ClCompile Include="__SRC__\Components\Lights\PointLight.cpp" />
    <ClCompile Include="__SRC__\Components\MeshRenderer.cpp" />
    <ClCompile Include="__SRC__\Components\Physics\BoxCollider.cpp" />
    <ClCompile Include="__SRC__\Components\Physics\CapsuleCollider.cpp" />
    <ClCompile Include="__SRC__\Components\Physics\Collider.cpp" />
    <ClCompile Include="__SRC__\Components\Physics\MeshCollider.cpp" />
    <ClCompile Include="__SRC__\Components\Physics\Rigidbody.cpp" />
    <ClCompile Include="__SRC__\Components\Physics\SphereCollider.cpp" />
    <ClCompile Include="__SRC__\Components\Transform.cpp" />
    <ClCompile Include="__SRC__\Core\Collections\ThreadBlock.cpp" />
    <ClCompile Include="__SRC__\Core\Object.cpp" />
    <ClCompile Include="__SRC__\Core\Synch\Semaphore.cpp" />
    <ClCompile Include="__SRC__\Core\Systems\JobSystem.cpp" />
    <ClCompile Include="__SRC__\Core\Collections\ThreadPool.cpp" />
    <ClCompile Include="__SRC__\Data\Material.cpp" />
    <ClCompile Include="__SRC__\Environment\GraphicsContext\LightingModels\ForwardRendering\ForwardLightingModel.cpp" />
    <ClCompile Include="__SRC__\Environment\GraphicsContext\LightingModels\GraphicsEnvironment.cpp" />
    <ClCompile Include="__SRC__\Environment\GraphicsContext\LightingModels\ShaderLoader.cpp" />
    <ClCompile Include="__SRC__\Environment\GraphicsContext\Lights\LightDataBuffer.cpp" />
    <ClCompile Include="__SRC__\Environment\GraphicsContext\Lights\LightTypeIdBuffer.cpp" />
    <ClCompile Include="__SRC__\Environment\GraphicsContext\Lights\SceneLightInfo.cpp" />
    <ClCompile Include="__SRC__\Environment\SceneContext.cpp" />
    <ClCompile Include="__SRC__\Graphics\Data\GraphicsMesh.cpp" />
    <ClCompile Include="__SRC__\Data\Mesh.cpp" />
    <ClCompile Include="__SRC__\Environment\AppContext.cpp" />
    <ClCompile Include="__SRC__\Environment\Scene.cpp" />
    <ClCompile Include="__SRC__\Graphics\Data\ShaderBinaries\ShaderClass.cpp" />
    <ClCompile Include="__SRC__\Graphics\Data\ShaderBinaries\ShaderResourceBindings.cpp" />
    <ClCompile Include="__SRC__\Graphics\Data\ShaderBinaries\ShaderSet.cpp" />
    <ClCompile Include="__SRC__\Graphics\Data\ShaderBinaries\SPIRV_Binary.cpp" />
    <ClCompile Include="__SRC__\Graphics\GraphicsInstance.cpp" />
    <ClCompile Include="__SRC__\Graphics\GraphicsDevice.cpp" />
    <ClCompile Include="__SRC__\Graphics\Memory\Texture.cpp" />
    <ClCompile Include="__SRC__\Graphics\PhysicalDevice.cpp" />
    <ClCompile Include="__SRC__\Graphics\Pipeline\Shader.cpp" />
    <ClCompile Include="__SRC__\Graphics\Data\GraphicsPipelineSet.cpp" />
    <ClCompile Include="__SRC__\Graphics\Rendering\RenderSurface.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\Buffers\VulkanConstantBuffer.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\TextureSamplers\VulkanDynamicTextureSampler.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\TextureViews\VulkanDynamicTextureView.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\Buffers\VulkanStaticBuffer.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\Buffers\VulkanDynamicBuffer.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\Textures\VulkanDynamicTexture.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\TextureSamplers\VulkanStaticTextureSampler.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\VulkanDynamicDataUpdater.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\VulkanMemory.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\Textures\VulkanStaticTexture.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\Textures\VulkanTexture.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanCommandBuffer.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanCommandPool.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Memory\TextureViews\VulkanStaticTextureView.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanDeviceQueue.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanFrameBuffer.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanPipeline.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanRenderPass.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanGraphicsPipeline.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanShader.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Rendering\VulkanRenderSurface.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Rendering\VulkanSurfaceRenderEngine.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\Rendering\VulkanSwapChain.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\VulkanInstance.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\VulkanDevice.cpp" />
    <ClCompile Include="__SRC__\Graphics\Vulkan\VulkanPhysicalDevice.cpp" />
    <ClCompile Include="__SRC__\OS\Logging\Logger.cpp" />
    <ClCompile Include="__SRC__\OS\Logging\StreamLogger.cpp" />
    <ClCompile Include="__SRC__\OS\Window\GLFW\GLFW_Input.cpp" />
    <ClCompile Include="__SRC__\OS\Window\GLFW\GLFW_Window.cpp" />
    <ClCompile Include="__SRC__\OS\Window\Window.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysicsInstance.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXBody.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXCollider.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXInstance.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXMaterial.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXDynamicBody.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXMeshCollider.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXScene.cpp" />
    <ClCompile Include="__SRC__\Physics\PhysX\PhysXStaticBody.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="__SRC__\Application\AppInformation.h" />
    <ClInclude Include="__SRC__\Application\AppVersion.h" />
    <ClInclude Include="__SRC__\Components\Camera.h" />
    <ClInclude Include="__SRC__\Components\Component.h" />
    <ClInclude Include="__SRC__\Components\Interfaces\PhysicsUpdaters.h" />
    <ClInclude Include="__SRC__\Components\Interfaces\Updatable.h" />
    <ClInclude Include="__SRC__\Components\Lights\DirectionalLight.h" />
    <ClInclude Include="__SRC__\Components\Lights\PointLight.h" />
    <ClInclude Include="__SRC__\Components\MeshRenderer.h" />
    <ClInclude Include="__SRC__\Components\Physics\BoxCollider.h" />
    <ClInclude Include="__SRC__\Components\Physics\CapsuleCollider.h" />
    <ClInclude Include="__SRC__\Components\Physics\Collider.h" />
    <ClInclude Include="__SRC__\Components\Physics\MeshCollider.h" />
    <ClInclude Include="__SRC__\Components\Physics\Rigidbody.h" />
    <ClInclude Include="__SRC__\Components\Physics\SphereCollider.h" />
    <ClInclude Include="__SRC__\Components\Transform.h" />
    <ClInclude Include="__SRC__\Core\Collections\ObjectSet.h" />
    <ClInclude Include="__SRC__\Core\Collections\ThreadBlock.h" />
    <ClInclude Include="__SRC__\Core\Systems\ActionQueue.h" />
    <ClInclude Include="__SRC__\Core\Systems\Event.h" />
    <ClInclude Include="__SRC__\Core\Function.h" />
    <ClInclude Include="__SRC__\Core\Collections\ObjectCache.h" />
    <ClInclude Include="__SRC__\Core\Stopwatch.h" />
    <ClInclude Include="__SRC__\Core\Object.h" />
    <ClInclude Include="__SRC__\Core\Reference.h" />
    <ClInclude Include="__SRC__\Core\Synch\Semaphore.h" />
    <ClInclude Include="__SRC__\Core\Systems\JobSystem.h" />
    <ClInclude Include="__SRC__\Core\Collections\ThreadPool.h" />
    <ClInclude Include="__SRC__\Core\Unused.h" />
    <ClInclude Include="__SRC__\Data\Material.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\GraphicsContext.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\LightingModels\ForwardRendering\ForwardLightingModel.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\LightingModels\GraphicsEnvironment.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\LightingModels\ShaderLoader.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\Lights\LightDataBuffer.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\Lights\LightDescriptor.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\Lights\LightTypeIdBuffer.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\Lights\SceneLightInfo.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\LightingModels\LightingModel.h" />
    <ClInclude Include="__SRC__\Environment\GraphicsContext\SceneObjects\GraphicsObjectDescriptor.h" />
    <ClInclude Include="__SRC__\Environment\PhysicsContext.h" />
    <ClInclude Include="__SRC__\Environment\SceneContext.h" />
    <ClInclude Include="__SRC__\Graphics\Data\GraphicsMesh.h" />
    <ClInclude Include="__SRC__\Data\Mesh.h" />
    <ClInclude Include="__SRC__\Environment\AppContext.h" />
    <ClInclude Include="__SRC__\Environment\Scene.h" />
    <ClInclude Include="__SRC__\Graphics\Data\ShaderBinaries\ShaderClass.h" />
    <ClInclude Include="__SRC__\Graphics\Data\ShaderBinaries\ShaderResourceBindings.h" />
    <ClInclude Include="__SRC__\Graphics\Data\ShaderBinaries\ShaderSet.h" />
    <ClInclude Include="__SRC__\Graphics\Data\ShaderBinaries\SPIRV_Binary.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\CommandBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\DeviceQueue.h" />
    <ClInclude Include="__SRC__\Graphics\GraphicsInstance.h" />
    <ClInclude Include="__SRC__\Graphics\GraphicsDevice.h" />
    <ClInclude Include="__SRC__\Graphics\Memory\Buffers.h" />
    <ClInclude Include="__SRC__\Graphics\Memory\Texture.h" />
    <ClInclude Include="__SRC__\Graphics\PhysicalDevice.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\FrameBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\GraphicsPipeline.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\Pipeline.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\RenderPass.h" />
    <ClInclude Include="__SRC__\Graphics\Pipeline\Shader.h" />
    <ClInclude Include="__SRC__\Graphics\Data\GraphicsPipelineSet.h" />
    <ClInclude Include="__SRC__\Graphics\Rendering\RenderEngine.h" />
    <ClInclude Include="__SRC__\Graphics\Rendering\RenderSurface.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\Buffers\VulkanConstantBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\TextureSamplers\VulkanDynamicTextureSampler.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\TextureSamplers\VulkanTextureSampler.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\TextureViews\VulkanDynamicTextureView.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\TextureViews\VulkanTextureView.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\Buffers\VulkanStaticBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\Buffers\VulkanDynamicBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\Textures\VulkanDynamicTexture.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\VulkanDynamicDataUpdater.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\VulkanMemory.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\Textures\VulkanStaticTexture.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\Textures\VulkanTexture.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\TextureSamplers\VulkanStaticTextureSampler.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanCommandBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanCommandPool.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Memory\TextureViews\VulkanStaticTextureView.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanDeviceQueue.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanFrameBuffer.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanPipeline.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanRenderPass.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanGraphicsPipeline.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Pipeline\VulkanShader.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Rendering\VulkanRenderEngine.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Rendering\VulkanSurfaceRenderEngine.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Rendering\VulkanRenderSurface.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Rendering\VulkanSwapChain.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Synch\VulkanFence.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Synch\VulkanSemaphore.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\Synch\VulkanTimelineSemaphore.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\VulkanAPIIncludes.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\VulkanInstance.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\VulkanDevice.h" />
    <ClInclude Include="__SRC__\Graphics\Vulkan\VulkanPhysicalDevice.h" />
    <ClInclude Include="__SRC__\Math\Helpers.h" />
    <ClInclude Include="__SRC__\Math\BitMask.h" />
    <ClInclude Include="__SRC__\Math\Math.h" />
    <ClInclude Include="__SRC__\OS\Input\Input.h" />
    <ClInclude Include="__SRC__\OS\Logging\Logger.h" />
    <ClInclude Include="__SRC__\OS\Logging\StreamLogger.h" />
    <ClInclude Include="__SRC__\OS\Window\GLFW\GLFW_Input.h" />
    <ClInclude Include="__SRC__\OS\Window\GLFW\GLFW_Window.h" />
    <ClInclude Include="__SRC__\OS\Window\Window.h" />
    <ClInclude Include="__SRC__\Physics\PhysicsCollider.h" />
    <ClInclude Include="__SRC__\Physics\PhysicsInstance.h" />
    <ClInclude Include="__SRC__\Physics\PhysicsMaterial.h" />
    <ClInclude Include="__SRC__\Physics\PhysicsScene.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXAPIIncludes.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXBody.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXCollider.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXInstance.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXMaterial.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXDynamicBody.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXMeshCollider.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXScene.h" />
    <ClInclude Include="__SRC__\Physics\PhysX\PhysXStaticBody.h" />
    <ClInclude Include="__SRC__\Physics\PhysicsBody.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>